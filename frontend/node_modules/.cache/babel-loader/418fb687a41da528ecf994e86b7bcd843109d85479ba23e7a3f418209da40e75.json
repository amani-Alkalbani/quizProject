{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password, pic) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      pic,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","pic"],"sources":["C:/Users/amani/OneDrive/Desktop/QuizProject/frontend/src/actions/userActions.js"],"sourcesContent":["\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n \r\n  } from \"../constants/userConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_LOGIN_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        \"http://localhost:5000/api/users/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const logout = () => async (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_LOGOUT });\r\n  };\r\n\r\n\r\n  export const register = (name, email, password, pic) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        \"/api/users\",\r\n        { name, pic, email, password },\r\n        config\r\n      );\r\n  \r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n  \r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };"],"mappings":"AACA,SACIA,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,WAAW,EACXC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QAEhB,4BAA4B;AAErC,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAmB,CAAC,CAAC;IAEtC,MAAMY,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/B,uCAAuC,EACvC;MAAEP,KAAK;MAAEC;IAAS,CAAC,EACnBG,MACF,CAAC;IAEDF,QAAQ,CAAC;MAAEC,IAAI,EAAEV,kBAAkB;MAAEe,OAAO,EAAEF;IAAK,CAAC,CAAC;IAErDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAEZ,eAAe;MACrBiB,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM,MAAOd,QAAQ,IAAK;EAC9CO,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnCf,QAAQ,CAAC;IAAEC,IAAI,EAAET;EAAY,CAAC,CAAC;AACjC,CAAC;AAGD,OAAO,MAAMwB,QAAQ,GAAGA,CAACC,IAAI,EAAEnB,KAAK,EAAEC,QAAQ,EAAEmB,GAAG,KAAK,MAAOlB,QAAQ,IAAK;EAC1E,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAsB,CAAC,CAAC;IAEzC,MAAMQ,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/B,YAAY,EACZ;MAAEY,IAAI;MAAEC,GAAG;MAAEpB,KAAK;MAAEC;IAAS,CAAC,EAC9BG,MACF,CAAC;IAEDF,QAAQ,CAAC;MAAEC,IAAI,EAAEN,qBAAqB;MAAEW,OAAO,EAAEF;IAAK,CAAC,CAAC;IAExDJ,QAAQ,CAAC;MAAEC,IAAI,EAAEV,kBAAkB;MAAEe,OAAO,EAAEF;IAAK,CAAC,CAAC;IAErDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAER,kBAAkB;MACxBa,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}